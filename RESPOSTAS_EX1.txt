Componentes:
Maria Clara L. Monteiro
François Dantas Oliveira

Questões:
1. Sobre a arquitetura de Single Page Applications, explique 3 vantagens e 3
   desvantagens em relação ao modelo Multi Page Application:
	1.1. Vantagens
		1.1.1 Após a carga inicial da aplicação apenas os dados trafegam entre
		      o servidor e cliente;
		1.1.2 Possibilita trabalhar de forma offline em algumas situações;
		1.1.3 Melhor experiência do usuário, já que não e necessário o
		      recarregamento da página em toda ação do usuário;
		1.1.4 Possibilita o debug da aplicação cliente no browser;
		1.1.5 Baixo acoplamento entre o servidor e cliente, possibilitando a
		      integração com front-end mobile.
	1.2. Desvantagens
		1.2.1 Difícil de integrar com ferramentas de busca;
		1.2.2 Precisa de um tempo maior para carga inicial;
		1.2.3 Uso excessivo de memória na aplicação pode causar problemas;
		1.2.4 Podem ser mais suscetíveis a ataques Cross-Site Scripting (XSS).

2. Quais são as principais responsabilidades de um(a) profissional de
   Arquitetura de Front Ends?
	2.1. Ser capaz de escolher, entre as diversas opções de ferramentas
	     disponíveis no mercado, a melhor para um determinado tipo de projeto;
	2.2. Capacidade de criar provas de conceito(POC) para auxiliar na tomada de
	     decisão principalmente nas questões técnicas;
	2.3. Definir o design e auxiliar na criação da camada do sistema que vai
	     interagir com o usuário;
	2.4. Compartilhar componentes entre os diversos times web;
	2.5. Disseminar o conhecimento sobre o projeto entre as equipes.

3. Quais são as principais vantagens e desvantagens em se utilizar
   Javascript/CSS em bloco em relação a escrita em múltiplos arquivos externos?
	3.1. Vantagens
		3.1.1 Maior desempenho, quando o arquivo HTML é carregado o estilo vem
		      junto diminuindo o tempo de parse da página no browser;
		3.1.2 Simple e Fácil entendimento, pois se aplica apenas a página em
		      que ele é utilizado.
	3.2. Desvantagens
		3.2.1 Pouca reusabilidade, já que o CSS fica no mesmo arquivo que o
		      HTML e não pode ser reutilizado em outras páginas;
		3.2.2 Manutenibilidade baixa, os estilos ficam espalhados por arquivos
		      diferentes e para mudar algum estilo temos que mudar em todos os
			  arquivos em que ele foi usado;
		3.2.3 Pode ser confuso, pois estilos com mesmo nome podem representar
		      estilos diferentes em diversos arquivos.

4. Descreva quais são as 3 principais vantagens e desvantagens em se escrever
   CSS utilizando a metodologia BEM
	4.1 Vantagens
		4.1.1 Evitar perda de tempo em definir os nomes;
		4.1.2 Identificação mais clara para os elementos e onde aplicá-los;
		4.1.3 Visão clara dos estado.
	4.2 Desvantagens
		4.2.1 Nomes geralmente ficam muito grandes;
		4.2.2 Código HTML ilegível devido aos nomes grandes;
		4.2.3 Dificulta a modificação por herança

5. Em relação à escrita de CSS em aplicações front-end, pode-se afirmar que o
   override de estilos pode prejudicar a performance e manutenibilidade da
   aplicação, uma vez que o browser precisa fazer o “repainting” sempre que uma
   classe tem o seu estilo sobrescrito e corre-se o risco de perdermos o
   controle de quais classes devemos editar caso ocorra uma refatoração nos
   estilos. Cite e explique 3 formas, metodologias ou ferramentas que auxiliam
   a evitar o override de estilos no css
   	5.1 Metodologia BEM - prioriza com ênfase o adoção de ‘classes’ em lugar de IDs, por serem aquelas, reutilizáveis. 
    Essa metodologia é utilizada seguindo técnicas que facilitam a construção do código,
    melhorando o desenvolvimento e a agilidade, 
    diminuindo o tempo de manutenção e auxiliando na conservação do código.
   	5.2 Metodologia SMACSS - aborda os componentes que devem começar com um prefixo e que este deve ser totalmente significativo. 
    Para os elementos deve-se utilizar o nome do modulo, traço e o nome do elemento.
   	5.3 Metodologia RSCSS - nomeia componentes com 2 palavras e usa traço para separa-lás, 
    além de seus elementos terem apenas 1 palavra. 
    Para os elementos filhos de um componente, utiliza sempre que possível o seletor >, 
    provendo uma melhor performance e evitando conflitos para elementos internos com o mesmo nome, 
    utiliza também classes ao invés de tags sempre que possível, 
    e quando nomear elementos com mais de duas palavras, concatena as mesmas.

6. Além do webpack, existem algumas outras opções na comunidade para o bundling
   de arquivos e automação de tarefas no desenvolvimento front-end. Pesquise
   dois outros bundlers e descreva resumidamente o seu funcionamento. Caso faça
   sentido, crie uma prova de conceito para conseguir explorar melhor as
   tecnologias e ter uma melhor visão sobre a tecnologia descrita
   
   Parcel - é um empacotador de aplicativos da web, diferenciado por sua experiência de desenvolvedor. 
   Ele oferece desempenho extremamente rápido utilizando processamento multicore e requer configuração zero.
   pode aceitar qualquer tipo de arquivo como ponto de entrada. 
   Se vincular o arquivo JavaScript principal no HTML usando um caminho relativo, 
   o Parcel também o processará e substituirá a referência por um URL para o arquivo de saída além de converter ativos JS em ES5.
   Possui um servidor de desenvolvimento embutido, que reconstruirá automaticamente a aplicaçao conforme é alterado os arquivos 
   e oferece suporte à substituição de módulos dinâmicos para um desenvolvimento rápido.
   
   Rollup - é um empacotador de módulo para JavaScript que compila pequenos pedaços de código em algo maior e mais complexo, 
   como uma biblioteca ou aplicativo. Ele usa o novo formato padronizado para módulos de código incluídos na revisão ES6 do JavaScript, 
   em vez de soluções idiossincráticas anteriores, como CommonJS e AMD. Os módulos ES permitem 
   combinar livre e perfeitamente as funções individuais mais úteis de suas bibliotecas favoritas. 
   Pode ser usado por meio de uma interface de linha de comando com um arquivo de configuração opcional ou por meio de sua API JavaScript .
